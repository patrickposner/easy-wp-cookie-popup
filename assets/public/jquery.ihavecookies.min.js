! function(e) {
    e.fn.ihavecookies = function(c) {
        var n = e(this),
            a = e.extend({
                cookieTypes: [{
                    type: "Site Preferences",
                    value: "preferences",
                    description: "These are cookies that are related to your site preferences, e.g. remembering your username, site colours, etc.",
                    lifetime: "test2"
                }, {
                    type: "Analytics",
                    value: "analytics",
                    description: "Cookies related to site visits, browser types, etc.",
                    lifetime: "test2"
                }, {
                    type: "Marketing",
                    value: "marketing",
                    description: "Cookies related to marketing, e.g. newsletters, social media, etc",
                    lifetime: "test2"
                }],
                title: "Cookies & Privacy",
                message: "Cookies enable you to use shopping carts and to personalize your experience on our sites, tell us which parts of our websites people have visited, help us measure the effectiveness of ads and web searches, and give us insights into user behavior so we can improve our communications and products.",
                link: "/privacy-policy",
                delay: 2e3,
                expires: 30,
                moreInfoLabel: "More information",
                acceptBtnLabel: "Accept Cookies",
                advancedBtnLabel: "Customise Cookies",
                cookieTypesTitle: "Select cookies to accept",
                fixedCookieTypeLabel: "Necessary",
                fixedCookieTypeDesc: "These are cookies that are essential for the website to work correctly.",
                fixedCookieLifetime: "A list of setted cookies and their lifetime",
                onAccept: function() {},
                uncheckBoxes: !1
            }, c),
            s = t("cookieControl"),
            r = t("cookieControlPrefs");
        if (s && r) {
            var l = !0;
            "false" == s && (l = !1), o(l, a.expires)
        } else {
            var d = '<li><input type="checkbox" name="bm[]" value="necessary" checked="checked" disabled="disabled"> <label title="' + a.fixedCookieTypeDesc + '">' + a.fixedCookieTypeLabel + "<br><small>" + a.fixedCookieTypeDesc + "</small></label><small>" + a.fixedCookieLifetime + "</small></li>";
            e.each(a.cookieTypes, function(e, o) {
                if ("" !== o.type && "" !== o.value) {
                    var i = "";
                    !1 !== o.description && (i = ' title="' + o.description + '"'), d += '<li><input type="checkbox" id="cookiitype-' + o.value + '" name="bm[]" value="' + o.value + '" data-auto="on"> <label for="cookiitype-' + o.value + '"' + i + ">" + o.type + "</br><small>" + o.description + "</small></label><small>" + o.lifetime + "</small></li>"
                }
            });
            var p = '<div id="cookii-message"><div class="cookii-row"><div class="cookii-column cookii-column-1"><h4>' + a.title + "</h4><p>" + a.message + ' <a href="' + a.link + '">' + a.moreInfoLabel + '</a></div><div class="cookii-column cookii-column-2"><div id="cookii-types" style="display:none;"><h4></h4><ul>' + d + '</ul></div></div><div class="cookii-column cookii-column-3"><p><button id="cookii-accept" type="button">' + a.acceptBtnLabel + '</button><button id="cookii-advanced" type="button">' + a.advancedBtnLabel + "</button></p></div></div></div>";
            setTimeout(function() {
                e(n).append(p), e("#cookii-message").hide().fadeIn("slow")
            }, a.delay), e("body").on("click", "#cookii-accept", function() {
                o(!0, a.expires), e('input[name="bm[]"][data-auto="on"]').prop("checked", !0);
                var t = [];
                e.each(e('input[name="bm[]"]').serializeArray(), function(e, o) {
                    t.push(o.value)
                }), i("cookieControlPrefs", JSON.stringify(t), 365), a.onAccept.call(this)
            }), e("body").on("click", "#cookii-advanced", function() {
                e('input[name="bm[]"]:not(:disabled)').attr("data-auto", "off").prop("checked", !1), e("#cookii-types").slideDown("fast", function() {
                    e("#cookii-advanced").prop("disabled", !0)
                })
            })
        }!0 === a.uncheckBoxes && e('input[type="checkbox"].ihavecookies').prop("checked", !1)
    }, e.fn.ihavecookies.cookie = function() {
        var e = t("cookieControlPrefs");
        return JSON.parse(e)
    }, e.fn.ihavecookies.preference = function(e) {
        var o = t("cookieControl"),
            i = t("cookieControlPrefs");
        return i = JSON.parse(i), !1 !== o && !1 !== i && -1 !== i.indexOf(e)
    };
    var o = function(o, t) {
            i("cookieControl", o, t), e("#cookii-message").fadeOut("fast", function() {
                e(this).remove()
            })
        },
        i = function(e, o, i) {
            var c = new Date;
            c.setTime(c.getTime() + 24 * i * 60 * 60 * 1e3);
            var n = "expires=" + c.toUTCString();
            return document.cookie = e + "=" + o + ";" + n + ";path=/", t(e)
        },
        t = function(e) {
            for (var o = e + "=", i = decodeURIComponent(document.cookie).split(";"), t = 0; t < i.length; t++) {
                for (var c = i[t];
                    " " == c.charAt(0);) c = c.substring(1);
                if (0 === c.indexOf(o)) return c.substring(o.length, c.length)
            }
            return !1
        }
}(jQuery);